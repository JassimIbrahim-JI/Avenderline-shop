@model LavenderLine.ViewModels.Products.ProductViewModel
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewData["Title"] = "Edit Product";
}

<div class="container-fluid px-4">
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-primary text-white py-3">
            <h3 class="mb-0">Edit @Model.Name</h3>
        </div>
        <div class="card-body">
            <form id="editProductForm" enctype="multipart/form-data" asp-action="Edit" method="post">
                
                <input type="hidden" asp-for="ProductId" />
                <input type="hidden" asp-for="CreatedDate" />

                <div class="row g-4">
                    <!-- Left Column -->
                    <div class="col-lg-8">
                        <div class="row g-3">

                        <div class="col-md-6">
                            <label asp-for="CategoryId" class="form-label">Category</label>
                            <select asp-for="CategoryId"
                                    asp-items="ViewBag.Categories"
                                    class="form-control">
                                <option value="">-- choose --</option>
                            </select>
                            <span asp-validation-for="CategoryId"
                                    class="text-danger small"></span>
                        </div>


                            <!-- Form Fields -->
                            <div class="col-12">
                                <label asp-for="Name" class="form-label">Product Name</label>
                                <input asp-for="Name" class="form-control" />
                                <span asp-validation-for="Name" class="text-danger small"></span>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="Price" class="form-label">Price</label>
                                <div class="input-group">
                                    <span class="input-group-text">QAR</span>
                                    <input asp-for="Price" class="form-control" />
                                </div>
                                <span asp-validation-for="Price" class="text-danger small"></span>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="Quantity" class="form-label">Stock Quantity</label>
                                <input asp-for="Quantity" class="form-control" />
                                <span asp-validation-for="Quantity" class="text-danger small"></span>
                            </div>

                            <!-- Inventory Management -->
                            <div class="col-12">
                                <div class="card border-0 shadow-sm">
                                    <div class="card-header bg-light">
                                        <h5 class="mb-0">Product Variations</h5>
                                        <div class="mt-2">
                                            <button type="button" class="btn btn-sm btn-primary" onclick="addRow('lengthInventory', 'Lengths')">
                                                <i class="fas fa-plus me-1"></i>Add Length
                                            </button>
                                            <button type="button" class="btn btn-sm btn-primary ms-2" onclick="addRow('sizeInventory', 'Sizes')">
                                                <i class="fas fa-plus me-1"></i>Add Size
                                            </button>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <div class="row g-2">
                                            <div class="col-md-6">
                                                <h6 class="mb-3">Lengths</h6>
                                                <div id="lengthInventory">
                                                    @for (var i = 0; i < Model.Lengths.Count; i++)
                                                    {
                                                        <div class="input-group mb-2">
                                                            <input name="Lengths[@i]" class="form-control"
                                                                   value="@Model.Lengths[i]" placeholder="Length" />
                                                            <button type="button" class="btn btn-danger" onclick="removeRow(this)">
                                                                <i class="fas fa-times"></i>
                                                            </button>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <h6 class="mb-3">Sizes</h6>
                                                <div id="sizeInventory">
                                                    @for (var i = 0; i < Model.Sizes.Count; i++)
                                                    {
                                                        <div class="input-group mb-2">
                                                            <input name="Sizes[@i]" class="form-control"
                                                                   value="@Model.Sizes[i]" placeholder="Size" />
                                                            <button type="button" class="btn btn-danger" onclick="removeRow(this)">
                                                                <i class="fas fa-times"></i>
                                                            </button>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Right Column -->
                    <div class="col-lg-4">
                        <div class="card border-0 shadow-sm h-100">
                            <div class="card-body">
                                <!-- Image Upload -->
                                <div class="mb-4">
                                    <label asp-for="ImageFile" class="form-label">Product Image</label>
                                    <div class="file-upload-wrapper border rounded-3 p-3 text-center">
                                        <input asp-for="ImageFile" type="file" class="form-control"
                                               accept="image/*" onchange="previewImage(this)" />
                                        <div class="file-upload-message">
                                            <i class="fas fa-cloud-upload-alt fa-3x text-muted mb-3"></i>
                                            <p class="mb-1">Drag and drop or click to upload</p>
                                            <small class="text-muted">(Max 5MB)</small>
                                        </div>
                                    </div>
                                    <span asp-validation-for="ImageFile" class="text-danger small"></span>
                                    <div class="mt-3 text-center">
                                        <img id="imagePreview" src="@Model.ImageUrl"
                                             class="img-fluid rounded" style="max-width: 200px;" />
                                    </div>
                                </div>

                                <!-- Form Actions -->
                                <div class="d-grid gap-2">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-save me-2"></i>Save Changes
                                    </button>
                                    <a asp-action="Index" class="btn btn-outline-secondary">
                                        <i class="fas fa-arrow-left me-2"></i>Cancel
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Enhanced dynamic row handling
        function addRow(containerId, fieldName) {
            const container = document.getElementById(containerId);
            const index = container.querySelectorAll('.input-group').length;

            const template = `
                    <div class="input-group mb-2">
                        <input name="${fieldName}[${index}]" class="form-control"
                               placeholder="${fieldName === 'Lengths' ? 'Length' : 'Size'}" />
                        <button type="button" class="btn btn-danger" onclick="removeRow(this)">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>`;

            container.insertAdjacentHTML('beforeend', template);
            reindexInputs(containerId, fieldName);
        }

        function removeRow(button) {
            const row = button.closest('.input-group');
            row.remove();
            const containerId = row.parentElement.id;
            const fieldName = containerId === 'lengthInventory' ? 'Lengths' : 'Sizes';
            reindexInputs(containerId, fieldName);
        }

        function reindexInputs(containerId, fieldName) {
            const container = document.getElementById(containerId);
            const inputs = container.querySelectorAll(`input[name^="${fieldName}"]`);
            inputs.forEach((input, index) => {
                input.name = `${fieldName}[${index}]`;
            });
        }

        // Form validation
        document.getElementById('editProductForm').addEventListener('submit', function (e) {
            const validLengths = Array.from(document.querySelectorAll('#lengthInventory input'))
                .filter(input => input.value.trim() !== '');
            const validSizes = Array.from(document.querySelectorAll('#sizeInventory input'))
                .filter(input => input.value.trim() !== '');

            if (validLengths.length < 2 || validSizes.length < 2) {
                e.preventDefault();
                Toast.show('warning', 'Please maintain at least 2 valid lengths and 2 valid sizes');
                return;
            }
        });
    </script>
}