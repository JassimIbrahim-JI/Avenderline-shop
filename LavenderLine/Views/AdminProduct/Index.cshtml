@using System.Globalization
@model IEnumerable<LavenderLine.ViewModels.Products.ProductViewModel>

@{
    ViewData["Title"] = "Products";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var totalPages = (int)Math.Ceiling((double)ViewBag.TotalCount / ViewBag.PageSize);
}


<style>
    .status-indicator {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        display: inline-block;
    }

    .table-hover tbody tr:hover {
        background-color: rgba(13, 110, 253, 0.05);
    }

    .form-switch .form-check-input {
        width: 2.5em;
        height: 1.5em;
    }

    .page-item.active .page-link {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
</style>

@Html.AntiForgeryToken()

<div class="container-fluid px-4">
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-primary text-white py-3">
            <div class="row align-items-center">
                <div class="col-6">
                    <h3 class="mb-0">Product Management</h3>
                </div>
                <div class="col-6 text-end">
                    <a asp-action="Create" class="btn btn-light">
                        <i class="fas fa-plus me-2"></i>New Product
                    </a>
                </div>
            </div>
        </div>

        <div class="card-body">
            @if (!Model.Any())
            {
                <div class="alert alert-warning" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>No products found
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>Product</th>
                                <th class="text-end">Price</th>
                                <th>Status</th>
                                <th class="text-center">Flags</th>
                                <th class="text-center">Promotion</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in Model)
                            {
                                <tr class="@(product.Quantity <= 0 ? "table-danger" : "")">
                                    <td>
                                        <div class="d-flex align-items-center gap-3">
                                            <img src="@product.ImageUrl" alt="@product.Name"
                                                 class="rounded-3" style="width: 60px; height: 60px; object-fit: cover">
                                            <div>
                                                <div class="fw-bold">@product.Name</div>
                                                <small class="text-muted">@product.CategoryName</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="text-end fw-bold">
                                        @product.Price.ToString("C", new CultureInfo("en-QA"))
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center gap-2">
                                            <div class="status-indicator @(product.Quantity > 0 ? "bg-success" : "bg-danger")"></div>
                                            <span>@(product.Quantity > 0 ? "In Stock" : "Out of Stock")</span>
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        <div class="d-flex gap-2 justify-content-center">
                                            <div class="form-check">
                                                <input type="checkbox" class="form-check-input toggle-active"
                                                       data-id="@product.ProductId" @(product.IsActive ? "checked" : "")>
                                                <label class="form-check-label small">Active</label>
                                            </div>
                                            <div class="form-check">
                                                <input type="checkbox" class="form-check-input toggle-featured"
                                                       data-id="@product.ProductId" @(product.IsFeatured ? "checked" : "")>
                                                <label class="form-check-label small">Featured</label>
                                            </div>
                                            <div class="form-check">
                                                <input type="checkbox" class="form-check-input toggle-related"
                                                       data-id="@product.ProductId" @(product.IsExcludedFromRelated ? "checked" : "")>
                                                <label class="form-check-label small">Exclude</label>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        <div class="form-check">
                                            <input type="checkbox" class="form-check-input promotion-checkbox"
                                                   data-id="@product.ProductId" data-category="@product.CategoryName"
                                            @(product.HasPromotion ? "checked" : "")>
                                            <label class="form-check-label small">Promotion</label>
                                        </div>
                                    </td>
                                    <td class="text-end">
                                        <div class="d-flex gap-2 justify-content-end">
                                            <a asp-action="Details" asp-route-id="@product.ProductId"
                                               class="btn btn-sm btn-outline-info" data-bs-toggle="tooltip" title="Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@product.ProductId"
                                               class="btn btn-sm btn-outline-secondary" data-bs-toggle="tooltip" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button class="btn btn-sm btn-outline-danger delete-product"
                                                    data-id="@product.ProductId" data-bs-toggle="tooltip" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                <nav class="mt-4">
                    <ul class="pagination justify-content-center">
                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == ViewBag.PageNumber ? "active" : "")">
                                <a class="page-link" asp-action="Index"
                                   asp-route-pageNumber="@i" asp-route-pageSize="@ViewBag.PageSize">
                                    @i
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

<!-- Promotion Modal -->
<div class="modal fade" id="promotionModal" tabindex="-1" aria-labelledby="promotionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="promotionModalLabel">Add Promotion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="promotionForm" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="promotionProductId" class="form-control" />

                    <div class="form-floating mb-3">
                        <input type="text" id="promotionTitle" class="form-control" placeholder="Title" required>
                        <label for="promotionTitle">Title</label>
                    </div>
                    <div class="form-floating mb-3">
                        <input type="text" id="promotionText" class="form-control" placeholder="Text" required>
                        <label for="promotionText">Text</label>
                    </div>
                    <div class="form-floating mb-3">
                        <input type="number" id="discountPercentage" class="form-control" placeholder="Discount Percentage" required>
                        <label for="discountPercentage">Discount Percentage</label>
                    </div>
                    <div class="form-floating mb-3">
                        <input type="datetime-local" id="endDate" class="form-control" required>
                        <label for="endDate">End Date</label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="savePromotionBtn">Save</button>
            </div>
        </div>
    </div>
</div>




    @section Scripts{
    <script>
        $(document).ready(function () {
            $('.toggle-active').on('change', function () {
                const checkbox = $(this);
                const productId = checkbox.data('id');
                const currentState = checkbox.prop('checked');
                var isActive = this.checked;
                $.ajax({
                    url: '/AdminProduct/ToggleIsActive',
                    type: 'POST',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    data: { id: productId, isActive: isActive },
                    success: function (response) {
                        if (response.success) {
                            Toast.show("success", "Product active successful");
                        } else {
                            Toast.show("danger", response.message || "An error occurred.");
                        }
                    },
                    error: function (error) {
                      
                        Toast.show("danger", `Error toggling product:${error}`);
                    }
                });
            });

            $('.toggle-featured').on('change', function () {
                const checkbox = $(this);
                const productId = checkbox.data('id');
                const currentState = checkbox.prop('checked');
                var isFeatured = this.checked;
                $.ajax({
                    url: '/AdminProduct/ToggleIsFeatured',
                    type: 'POST',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    data: { id: productId, isFeatured: isFeatured },
                    success: function (response) {
                        if (response.success) {
                            Toast.show("success", "Product featured successful");
                        } else {
                            Toast.show("danger", response.message || "An error occurred.");
                        }
                    },
                    error: function (error) {
                        Toast.show("danger", `Error toggling product:${error}`);
                    }
                });
            });

            $('.toggle-related').on('change', function () {
                const checkbox = $(this);
                const productId = checkbox.data('id');
                const currentState = checkbox.prop('checked');
                var isExcludedFromRelated = this.checked; // Store the current state of the checkbox
                $.ajax({
                    url: '/AdminProduct/ToggleIsExcludedFromRelated',
                    type: 'POST',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    data: { id: productId, isExcludedFromRelated: isExcludedFromRelated },
                    success: function (response) {
                        if (response.success) {
                            Toast.show("success", "Product related successful");
                        } else {
                            Toast.show("danger", response.message || "An error occurred.");
                        }
                    },
                    error: function (xhr) {
                        $(this).prop('checked', !currentState); // Reset toggle
                        Toast.show("danger", `Error: ${xhr.statusText}`);
                        console.error(xhr.responseText);
                    }
                });
            });

          $(document).on('click', '.delete-product', function () {
        var productId = $(this).data('id');

        if (!confirm("Are you sure you want to delete this product?")) {
            return;
        }

        $.ajax({
            url: '/AdminProduct/Delete',
            type: 'POST',
            data: { id: productId },
            headers: {
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            },
            success: function (response) {
                if (response.success) {
                    Toast.show('success', response.message);
                    // Optionally remove the deleted product row
                     $(`tr:has([data-id=${productId}])`).remove();
                } else {
                    Toast.show('danger', response.message);
                }
            },
            error: function () {
                Toast.show('danger', 'An error occurred while deleting the product.');
            }
        });
    });

     // Handle Promotion Save Button Click
        $('#savePromotionBtn').on('click', function () {
            var productId = $('#promotionProductId').val();
            var title = $('#promotionTitle').val();
            var text = $('#promotionText').val();
            var category = $('#promotionCategory').val();
            var discountPercentage = $('#discountPercentage').val();
            var endDate = $('#endDate').val();

            // Validate required fields
            if (!title || !text || !discountPercentage || !endDate) {
                Toast.show("danger", "All fields are required.");
                return;
            }

            var promotionData = {
                ProductId: productId,
                Title: title,
                Text: text,
                Category: category,
                DiscountPercentage: discountPercentage,
                EndDate: endDate
            };

            // Disable button & show loader
            $('#savePromotionBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Saving...');

            $.ajax({
                url: '/AdminProduct/AddPromotion',
                type: 'POST',
                data: promotionData,
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    if (response.success) {
                        Toast.show("success", "Promotion added successfully.");
                        $('#promotionModal').modal('hide'); // Close modal
                    } else {
                        Toast.show("danger", response.message);
                    }
                },
                error: function () {
                    Toast.show("danger", "An error occurred while adding the promotion.");
                },
                complete: function () {
                    // Re-enable button & reset text
                    $('#savePromotionBtn').prop('disabled', false).html('Save');
                }
            });
        });

        // Handle Promotion Checkbox Toggle
        $('.promotion-checkbox').on('change', function () {
            var productId = $(this).data('id');
            var category = $(this).data('category');
            var isChecked = $(this).is(':checked');

            if (isChecked) {
                // Open modal and prefill data
                $('#promotionProductId').val(productId);
                $('#promotionCategory').val(category);
                $('#promotionModal').modal('show');
            } else {
                // Remove promotion
                if (confirm("Are you sure you want to remove the promotion?")) {
                    $.ajax({
                        url: '/AdminProduct/RemovePromotion',
                        type: 'POST',
                        data: { productId: productId },
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                Toast.show("success", "Promotion removed successfully.");
                            } else {
                                Toast.show("danger", response.message);
                            }
                        },
                        error: function () {
                            Toast.show("danger", "An error occurred while removing the promotion.");
                        }
                    });
                } else {
                    // Keep checkbox checked
                    $(this).prop('checked', true);
                }
            }
        });

       

        });
    </script>
    }
